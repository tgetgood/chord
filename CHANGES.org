* Changes
** 0.7.x
*** 0.7.0
Breaking changes:
- There are libraries that do AJAX support much better than Chord (in
  particular, [[https://github.com/r0man/cljs-http][cljs-http]]) so I've dropped the half-baked support in Chord.
- Fressian support has been fixed, but moved to =chord.format.fressian= - thanks
  again to Jeff Rose :)

Thanks also to [[https://github.com/juliangamble][Julian Gamble]] for his help fixing and documenting the example
project!

** 0.6.x

*** 0.6.0

Breaking change: Fressian seems to be broken, so I've moved the binary
support out to =chord.format.binary=, which users now need to require
if they need binary support.

** 0.5.x

*** 0.5.0

From a Chord end user's point of view, no breaking changes.

The 'parsing/formatting' implementation has changed, and there is no
longer a =wrap-format= multi-method. This was removed in favour of a
=ChordFormatter= protocol which is now used for both WebSockets and
AJAX, and is decoupled from the channel implementation used in the
previous WebSockets implementation.

Thanks to [[https://github.com/lsnape][Luke Snape]], [[https://github.com/rosejn][Jeff Rose]] and [[https://github.com/tgetgood][Thomas Getgood]] for their help
implementing the various formats.

As a result, Jeff's 'chord-fressian' library, and Luke's
'chord-transit' library, have been merged into Chord - there's no need
to import these separately (and, indeed, they are no longer compatible
with this release).

Chord now supports AJAX requests, see the README for more details.

Thanks also to Luke for his help in testing this release.

** 0.4.x
*** 0.4.2

No breaking changes - bugfix from [[https://github.com/weavejester][James Reeves]] regarding passing
options to =with-channel=. See [[https://github.com/james-henderson/chord/pull/19][PR 19]] for more details.

Thanks James!

*** 0.4.1

The binary type of the channels now defaults to array buffers rather
than a DOM blob object.

See [[https://github.com/james-henderson/chord/pull/17][PR 17]] for more details.

Thanks to [[https://github.com/rosejn][Jeff Rose]] for the PR!
*** 0.4.0

Breaking change: Channel returned from =chord.client/ws-ch= now
returns a map; either ={:ws-channel ch}= or ={:error error}=, rather
than just a channel.

This means that Chord now handles client-side connection and
disconnection errors a lot more reliably.

Internally, a lot of code has moved to CLJX where possible, cutting
down on a lot of duplication.

Thanks to [[https://github.com/charles-dyfis-net][Charles Duffy]] for reporting the original issue, his PR,
fixing a couple of other bugs, and generally for all of his help with
this release.

** 0.3.x
*** 0.3.1

Added JSON support - you can now pass ={:format :json}= or
={:format :json-kw}= to the websocket constructors.

Fixed bug whereby options passed to =wrap-websocket-handler= weren't
being propagated through.

Thanks to [[https://github.com/michaelklishin][Michael Klishin]] and [[https://github.com/yods][Yodit Stanton]] for their PR!

Thanks also to [[https://github.com/giuliano108][Giuliano Cioffi]] for fixing a dependency issue in the
example project.

*** 0.3.0

Breaking change: defaulting to expecting EDN messages over the
channel.

This shouldn't impact users who use Chord on both the client and the
server (the message over the wire will be ="msg"= rather than =msg=,
but will be automatically parsed back to a string before the user sees
it).

It will impact users who only use Chord on one end - make sure that
you pass ={:format :str}= to continue with the same behaviour as
0.2.2.

Thanks to [[https://github.com/eneroth][Henrik Eneroth]] for the discussion!

** 0.2.x
*** 0.2.2

No breaking changes. Adding in =wrap-websocket-handler= to provide an
macro-less alternative to =with-channel=.

Thanks to [[https://github.com/malcolmsparks][Malcolm Sparks]] for the tip!

Thanks also to [[https://github.com/rrichardson][Rick Richardson]] for his doc fix.

*** 0.2.1

No breaking changes. Added ability to pass custom buffered channels to
use instead of the default unbuffered channels.

Thanks to [[https://github.com/timgluz][Timo Sulg (timgluz)]] for the PR!

*** 0.2.0

Breaking change - CLJS namespace now =chord.client= due to recent
versions of the CLJS compiler not liking single-segment namespaces

Thanks to [[https://github.com/hadronzoo][Joshua Griffith (hadronzoo)]] for the PR!

** 0.1.x
*** 0.1.1

No breaking changes - added adapter around http-kit for Clojure
support.

*** 0.1.0

Initial release.

Thanks to [[https://github.com/eggsby][Thomas Omans (eggsby)]] for (unknowingly!) providing the idea
of how to combine two core.async channels together!
https://gist.github.com/eggsby/6102537
